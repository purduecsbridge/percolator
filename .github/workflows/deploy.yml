name: CD
on:
  push:
    branches: [ main ]

jobs:
  get_version_number:
    runs-on: ubuntu-latest
    outputs:
      version_number: ${{ steps.get_version_number.outputs.version_number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '>=11.0.0'
          distribution: 'adopt'
          cache: 'maven'

      - name: Get version from POM
        id: get_version_number
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "::set-output name=version_number::$version"


  release_check:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.label_check.outputs.result }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check for non-release label on PR
        id: label_check
        uses: actions/github-script@v3
        with:
          script: |
            const result = await github.repos.listPullRequestsAssociatedWithCommit({
              commit_sha: context.sha,
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            })
            if (result) {
              const data = result.data
              if (data && data[0]) {
                if (data[0].labels.some(label => label.name == "non-release")) {
                  console.log("This push should not trigger a release.")
                  return false
                } else {
                  console.log("This push should trigger a release.")
                  return true
                }
              }
            }
            // If there was no pull request associated with the commit,
            // assume that we should not release.
            // Note: devs can always force-push to the Maven repo directly.
            return false


  deploy_package:
    runs-on: ubuntu-latest
    needs: [ get_version_number, release_check ]
    if: needs.release_check.outputs.should_release == 'true'
    env:
      version_number: ${{ needs.get_version_number.outputs.version_number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '>=11.0.0'
          distribution: 'adopt'
          cache: 'maven'

      - name: Build
        run: mvn package
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Deploy
        run: mvn -B deploy
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Push tag for versioning
        run: |
          git fetch -q
          git tag "v$version_number" origin/main
          git push origin "v$version_number"


  deploy_docs:
    runs-on: ubuntu-latest
    needs: get_version_number
    env:
      version_number: ${{ needs.get_version_number.outputs.version_number }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Checkout pages
        uses: actions/checkout@v2
        with:
          ref: 'gh-pages'
          path: 'docs'

      - name: Setup JDK and Maven
        uses: actions/setup-java@v2
        with:
          java-version: '>=11.0.0'
          distribution: 'adopt'
          cache: 'maven'

      - name: Build docs
        run: mvn javadoc:javadoc
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Copy to latest directory
        run: cp -r target/site/apidocs/* docs/api/latest/

      - name: Copy to versioned directory
        run: |
          mkdir -p "docs/api/$version_number"
          cp -r target/site/apidocs/* "docs/api/$version_number/"

      - name: Deploy changes
        run: |
          cd docs
          repo="https://${{ github.token }}@github.com/${{ github.repository }}.git"
          git config user.name "GitHub Actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Deploy @ ${{ github.sha }}"
          git push $repo gh-pages
