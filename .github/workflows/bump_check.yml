name: Check for version bump
on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened, labeled, unlabeled ]

jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
      - name: Check if non-release
        run: |
          if ${{ ! contains(github.event.pull_request.labels.*.name, 'non-release') }}; then
            echo "release=true" >> $GITHUB_ENV
          fi

      - name: Leave warning comment if non-release
        if: ${{ !env.release }}
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ö†Ô∏è <b>PR tagged <i>non-release</i></b> ‚ö†Ô∏è<br><br>This PR is tagged <b>non-release</b> which means that a new release on GitHub Packages will NOT be made.'
            })

      - name: Checkout branch
        if: env.release
        uses: actions/checkout@v2

      - name: Setup JDK and Maven
        if: env.release
        uses: actions/setup-java@v1
        with:
          java-version: '>=11.0.0'

      - name: Load Maven repository from cache
        if: env.release
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Get current POM version
        if: env.release
        run: |
          check_ver_cmd="mvn help:evaluate -Dexpression=project.version -q -DforceStdout"
          curr_version=$($check_ver_cmd)
          echo "curr_version=$curr_version" >> $GITHUB_ENV

      - name: Checkout target branch
        if: env.release
        uses: actions/checkout@v2
        with:
          ref: ${{ github.base_ref }}

      - name: Get last POM version
        if: env.release
        run: |
          check_ver_cmd="mvn help:evaluate -Dexpression=project.version -q -DforceStdout"
          last_version=$($check_ver_cmd)
          echo "last_version=$last_version" >> $GITHUB_ENV

      - name: Check for version bump
        if: env.release
        run: |
          if ! dpkg --compare-versions $curr_version "gt" $last_version; then
            echo "not_bumped=true" >> $GITHUB_ENV
          fi

      - name: Leave error comment if version not bumped
        if: ${{ env.release && env.not_bumped }}
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üõë <b>Version number not bumped</b> üõë<br><br>The version number in the POM was not bumped since last release. Please update the version to >${{ env.last_version }} in order to release. If these changes are not for release (i.e., updating Javadocs, workflows, etc.), then label the PR with <b>non-release</b>.'
            })

      - name: Fail workflow if version not bumped
        if: ${{ env.release && env.not_bumped }}
        run: exit 1
